{
	"name": "rkp",
	"properties": {
		"folder": {
			"name": "New folder"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BAG1_opMode as short,",
				"          Body as string,",
				"          Ch1_LineContent as string,",
				"          Ch1_ProgPfadName as string,",
				"          Ch1_TollIdent as string,",
				"          Ch1_actSpeed_S1 as boolean,",
				"          E_ProgRunn as boolean,",
				"          E_ProgWait as boolean,",
				"          Eilgangoverride as short,",
				"          EnqueuedTimeUtc as string,",
				"          Spindeloverride as short,",
				"          SystemProperties as (connectionAuthMethod as string, connectionDeviceGenerationId as long, connectionDeviceId as string, enqueuedTime as string),",
				"          Vorschuboverride as short,",
				"          actProgNetTime as short,",
				"          ncStartCounter as short,",
				"          schemaId as string,",
				"          ts as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     container: 'machinedata',",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['00/2022/2022/01/01/00/*.json'],",
				"     partitionBy('roundRobin', 2)) ~> source2",
				"source2 select(mapColumn(",
				"          BAG1_opMode,",
				"          Ch1_LineContent,",
				"          Ch1_ProgPfadName,",
				"          Ch1_TollIdent,",
				"          Ch1_actSpeed_S1,",
				"          E_ProgRunn,",
				"          E_ProgWait,",
				"          Eilgangoverride,",
				"          EnqueuedTimeUtc,",
				"          Spindeloverride,",
				"          connectionAuthMehtod = SystemProperties.connectionAuthMethod,",
				"          connectionDeviceGenerationId = SystemProperties.connectionDeviceGenerationId,",
				"          connectionDeviceId = SystemProperties.connectionDeviceId,",
				"          enqueuedTime = SystemProperties.enqueuedTime,",
				"          Vorschuboverride,",
				"          actProgNetTime,",
				"          ncStartCounter,",
				"          schemaId,",
				"          ts",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3"
			]
		}
	}
}