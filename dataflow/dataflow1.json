{
	"name": "dataflow1",
	"properties": {
		"folder": {
			"name": "New folder"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceDataset_wh9",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "flatten1"
				},
				{
					"name": "parse1"
				},
				{
					"name": "flatten2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EnqueuedTimeUtc as string,",
				"          Properties as ({} as string),",
				"          SystemProperties as (connectionDeviceId as string, connectionAuthMethod as string, connectionDeviceGenerationId as string, enqueuedTime as string),",
				"          Body as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 10,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				"source1 derive(decoded_Body = array(fromBase64(Body))) ~> derivedColumn1",
				"derivedColumn1 foldDown(unroll(decoded_Body),",
				"     mapColumn(",
				"          EnqueuedTimeUtc,",
				"          Connectionid = SystemProperties.connectionDeviceId,",
				"          decoded_Body",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 parse(decoded_Body_new = ERROR_FUNCTION('') ? (E_ProgRunn as boolean)[],",
				"     format: 'json',",
				"     documentForm: 'documentPerLine') ~> parse1",
				"parse1 foldDown(unroll(decoded_Body_new),",
				"     mapColumn(",
				"          EnqueuedTimeUtc,",
				"          Connectionid,",
				"          ts = decoded_Body_new.ts",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2"
			]
		}
	}
}